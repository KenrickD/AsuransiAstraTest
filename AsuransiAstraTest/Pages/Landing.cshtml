@page
@model LandingModel
@{
    ViewData["Title"] = "University Landing";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - AsuransiAstraTest</title>
    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <style>
        body {
            background-color: #1a1a1a;
            color: #ffffff;
            font-family: Arial, sans-serif;
            padding: 20px;
        }

        .welcome-header {
            text-align: center;
            margin-bottom: 30px;
            padding: 20px;
            border: 2px solid #ffffff;
            border-radius: 10px;
            background-color: #2a2a2a;
        }

        .university-table {
            background-color: #2a2a2a;
            border: 2px solid #ffffff;
            border-radius: 10px;
            overflow: hidden;
        }

        .table-dark {
            --bs-table-bg: #2a2a2a;
            --bs-table-border-color: #ffffff;
        }

            .table-dark th {
                border-color: #ffffff;
                background-color: #1a1a1a;
                color: #ffffff;
                text-align: center;
                font-weight: bold;
            }

            .table-dark td {
                border-color: #ffffff;
                color: #ffffff;
            }

        .btn-refresh {
            background-color: transparent;
            border: 2px solid #ffffff;
            color: #ffffff;
            padding: 10px 20px;
            margin-bottom: 20px;
        }

            .btn-refresh:hover {
                background-color: #ffffff;
                color: #1a1a1a;
            }

        .loading {
            text-align: center;
            padding: 50px;
        }

        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.8);
            display: none;
            z-index: 1000;
        }

        .modal-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #2a2a2a;
            border: 2px solid #ffffff;
            border-radius: 10px;
            padding: 30px;
            min-width: 400px;
            max-width: 600px;
        }

        .modal-header {
            text-align: center;
            margin-bottom: 20px;
            font-size: 1.5rem;
            font-weight: bold;
        }

        .modal-form-group {
            margin-bottom: 15px;
        }

        .modal-label {
            display: block;
            color: #ffffff;
            font-weight: bold;
            margin-bottom: 5px;
        }

        .modal-input {
            width: 100%;
            padding: 10px;
            background-color: transparent;
            border: 2px solid #ffffff;
            color: #ffffff;
            border-radius: 5px;
        }

            .modal-input:focus {
                outline: none;
                box-shadow: 0 0 0 0.2rem rgba(255, 255, 255, 0.25);
            }

        .modal-readonly {
            background-color: #1a1a1a;
            color: #cccccc;
        }

        .modal-buttons {
            text-align: center;
            margin-top: 20px;
        }

        .btn-modal {
            background-color: transparent;
            border: 2px solid #ffffff;
            color: #ffffff;
            padding: 10px 20px;
            margin: 0 10px;
            cursor: pointer;
            border-radius: 5px;
        }

            .btn-modal:hover {
                background-color: #ffffff;
                color: #1a1a1a;
            }

        .btn-save {
            border-color: #28a745;
            color: #28a745;
        }

            .btn-save:hover {
                background-color: #28a745;
                color: #ffffff;
            }

        .btn-cancel {
            border-color: #dc3545;
            color: #dc3545;
        }

            .btn-cancel:hover {
                background-color: #dc3545;
                color: #ffffff;
            }

        .table-row-clickable {
            cursor: pointer;
        }

            .table-row-clickable:hover {
                background-color: #3a3a3a !important;
            }
    </style>
</head>
<body>
    <div class="container-fluid">
        <div class="welcome-header">
            <h1>WELCOME, [@Model.Username]</h1>
        </div>

        <form id="tokenForm" style="display: none;">
            @Html.AntiForgeryToken()
        </form>

        <div class="university-table">
            <table class="table table-dark table-striped">
                <thead>
                    <tr>
                        <th>No</th>
                        <th>Nama Universitas</th>
                        <th>Website</th>
                    </tr>
                </thead>
                <tbody id="universityTableBody">
                    @if (Model.Universities != null && Model.Universities.Any())
                    {
                        @for (int i = 0; i < Model.Universities.Count; i++)
                        {
                            <tr class="table-row-clickable" onclick="openEditModal('@Model.Universities[i].UniversityId', '@(i + 1)', '@Html.Raw(Html.Encode(Model.Universities[i].Name))', '@Html.Raw(Html.Encode(Model.Universities[i].WebPages))')">
                                <td class="text-center">@(i + 1)</td>
                                <td>@Model.Universities[i].Name</td>
                                <td>
                                    @if (!string.IsNullOrEmpty(Model.Universities[i].WebPages))
                                    {
                                        <a href="@Model.Universities[i].WebPages" target="_blank" class="text-info" onclick="event.stopPropagation()">@Model.Universities[i].WebPages</a>
                                    }
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="3" class="text-center">No universities found</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>

    <div id="editModal" class="modal-overlay">
        <div class="modal-content">
            <div class="modal-header">
                Edit University
            </div>
            <form id="editForm">
                <div class="modal-form-group">
                    <label class="modal-label">Number</label>
                    <input type="text" id="modalNumber" class="modal-input modal-readonly" readonly>
                </div>
                <div class="modal-form-group">
                    <label class="modal-label">Nama Universitas</label>
                    <input type="text" id="modalName" class="modal-input" placeholder="Enter university name">
                </div>
                <div class="modal-form-group">
                    <label class="modal-label">Website</label>
                    <input type="url" id="modalWebsite" class="modal-input" placeholder="Enter website URL">
                </div>
                <div class="modal-buttons">
                    <button type="button" class="btn-modal btn-save" onclick="saveUniversity()">Save</button>
                    <button type="button" class="btn-modal btn-cancel" onclick="closeModal()">Cancel</button>
                </div>
            </form>
        </div>
    </div>

    <script src="~/lib/jquery/dist/jquery.min.js"></script>
    <script src="~/lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        let currentUniversityId = '';

        function openEditModal(universityId, number, name, website) {
            currentUniversityId = universityId;
            document.getElementById('modalNumber').value = number;
            document.getElementById('modalName').value = name || '';
            document.getElementById('modalWebsite').value = website || '';
            document.getElementById('editModal').style.display = 'block';
        }

        function closeModal() {
            document.getElementById('editModal').style.display = 'none';
            currentUniversityId = '';
        }

        async function saveUniversity() {
            const name = document.getElementById('modalName').value;
            const website = document.getElementById('modalWebsite').value;

            if (!name.trim()) {
                alert('University name is required');
                return;
            }

            try {
                const token = $('input[name="__RequestVerificationToken"]').val();

                const formData = new FormData();
                formData.append('universityId', currentUniversityId);
                formData.append('name', name);
                formData.append('website', website);
                formData.append('__RequestVerificationToken', token);

                const response = await fetch('/Landing?handler=UpdateUniversity', {
                    method: 'POST',
                    body: formData
                });

                if (response.ok) {
                    const result = await response.json();
                    if (result.success) {
                        closeModal();
                        location.reload();
                    } else {
                        alert('Failed to update university: ' + (result.error || 'Unknown error'));
                    }
                } else {
                    alert('Failed to update university. Server error.');
                }
            } catch (error) {
                console.error('Error:', error);
                alert('Error updating university. Please try again.');
            }
        }

        document.getElementById('editModal').addEventListener('click', function(e) {
            if (e.target === this) {
                closeModal();
            }
        });

        document.addEventListener('keydown', function(e) {
            if (e.key === 'Escape') {
                closeModal();
            }
        });
    </script>
</body>
</html>